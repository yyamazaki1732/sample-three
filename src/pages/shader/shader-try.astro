---
import Layout from '../../layouts/Layout.astro';
import "../../styles/shader-try.scss";
---

<Layout title="Welcome to Astro.">
  <div class="container02">
    <ul class="image-list">
      <li class="image-item">
        <a href="" class="image-wrapper">
          <img src="https://source.unsplash.com/whOkVvf0_hU/" alt="" />
        </a>
      </li>
      <li class="image-item">
        <a href="" class="image-wrapper">
          <img src="../public/whale.jpg" alt="" />
        </a>
      </li>
    </ul>
  </div>

  <section class="section">
    <h1 class="section-title">Title</h1>
    <p>Text Text Text Text.</p>
  </section>

  <div class="container01">
    <ul class="image-list">
      <li class="image-item">
        <a href="" class="image-wrapper">
          <h1 class="image-title">Flower</h1>
          <img src="https://source.unsplash.com/whOkVvf0_hU/" alt="" />
        </a>
      </li>
      <li class="image-item">
        <a href="" class="image-wrapper">
          <h1 class="image-title">Mountain</h1>
          <img src="https://source.unsplash.com/6pDLA8ieviw/" alt="" />
        </a>
      </li>
      <li class="image-item">
        <a href="" class="image-wrapper">
          <h1 class="image-title">Lake</h1>
          <img src="https://source.unsplash.com/BZxD1vALLT4/" alt="" />
        </a>
      </li>
      <li class="image-item">
        <a href="" class="image-wrapper">
          <h1 class="image-title">Bus</h1>
          <img src="https://source.unsplash.com/KiMVM5cy4aw/" alt="" />
        </a>
      </li>
    </ul>
  </div>
  <div class="webgl-canvas">
    <canvas id="webgl-canvas" class="webgl-canvas__body"></canvas>
  </div>
<!-- シェーダーをscriptタグ内に書いてJSで読み込む -->
<script id="v-shader" type="x-shader/x-vertex">
    varying vec2 vUv;
    uniform float uTime;

    float PI = 3.1415926535897932384626433832795;

    void main(){
        vUv = uv;
        vec3 pos = position;

        // 横方向
        float amp = 0.0003; // 振幅（の役割） 大きくすると波が大きくなる
        float freq = 0.01 * uTime; // 振動数（の役割） 大きくすると波が細かくなる

        // 縦方向
        float tension = -0.001 * uTime; // 上下の張り具合

        pos.x = pos.x + sin(pos.y * PI  * freq) * amp;
        pos.y = pos.y + (cos(pos.x * PI) * tension);

        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
    }
  </script>
  <script id="f-shader" type="x-shader/x-fragment">
    varying vec2 vUv;
    uniform sampler2D uTexture;
    uniform float uImageAspect;
    uniform float uPlaneAspect;
    uniform float uTime;

    void main(){
      // 画像のアスペクトとプレーンオブジェクトのアスペクトを比較し、短い方に合わせる
      vec2 ratio = vec2(
        min(uPlaneAspect / uImageAspect, 1.0),
        min((1.0 / uPlaneAspect) / (1.0 / uImageAspect), 1.0)
      );

      // 計算結果を用いてテクスチャを中央に配置
      vec2 fixedUv = vec2(
        (vUv.x - 0.5) * ratio.x + 0.5,
        (vUv.y - 0.5) * ratio.y + 0.5
      );

      vec2 offset = vec2(0.0, uTime * 0.0005);
      float r = texture2D(uTexture, fixedUv).r;
      float g = texture2D(uTexture, fixedUv).g;
      float b = texture2D(uTexture, fixedUv).b;
      vec3 texture = vec3(r, g, b);

      gl_FragColor = vec4(texture, 1.0);
    }
  </script>
</Layout>

<script src="../../scripts/shader/shader-try01.js"></script> 
<script src="../../scripts/shader/shader-try02.js"></script> 